name: Build deploy CI/CD

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

env:
  ENVIRONMENT: development
  PORT: 3000

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: Checkout code 
      uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm i
    - run: npm test
    - run: npm run lint --if-present
    - run: npm run build --if-present

  analitics:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 
    - name: Use Node.js 16.x
      uses: actions/setup-node@v3
      with:
        node-version: 16.x
        cache: 'npm'
    - run: npm i
    - run: npm run coverage
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy: 
    runs-on: ubuntu-latest
    needs: analitics
    steps:
    - name: Checkout code 
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Define Semantic Version
      id: version
      uses: paulhatch/semantic-version@v5.0.2
      with:
        major_pattern: "(MAJOR)"
        minor_pattern: "(MINOR)"
        version_format: "${major}.${minor}.${patch}-prerelease${increment}"
    - name: Docker Login
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
    - name: Build Image
      env:
        SEMATIC_VERSION: ${{ steps.version.outputs.version }}
      run: | 
        docker build -t fillikenes/webscraping-api-test:$SEMATIC_VERSION .
        docker tag fillikenes/webscraping-api-test:$SEMATIC_VERSION fillikenes/webscraping-api-test:latest
    - name: Push Image
      env:
        SEMATIC_VERSION: ${{ steps.version.outputs.version }}
      run: |
        docker push fillikenes/webscraping-api-test:$SEMATIC_VERSION
        docker push fillikenes/webscraping-api-test:latest
